services:
  auth.niffler.dc:
    container_name: auth.niffler.dc
    image: ${PREFIX}/niffler-auth-${PROFILE}:${AUTH_VER}
    pull_policy: always
    environment:
      - VAULT_TOKEN=${VAULT_TOKEN}
    ports:
      - 9000:9000
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    networks:
      - niffler-network

  currency.niffler.dc:
    container_name: currency.niffler.dc
    image: ${PREFIX}/niffler-currency-${PROFILE}:${CURRENCY_VER}
    pull_policy: always
    environment:
      - VAULT_TOKEN=${VAULT_TOKEN}
    ports:
      - 8091:8091
      - 8092:8092
    restart: always
    networks:
      - niffler-network

  gateway.niffler.dc:
    container_name: gateway.niffler.dc
    image: ${PREFIX}/niffler-gateway-${PROFILE}:${GATEWAY_VER}
    pull_policy: always
    environment:
      - VAULT_TOKEN=${VAULT_TOKEN}
    ports:
      - 8090:8090
    healthcheck:
      test: "wget --spider http://localhost:8090/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      auth.niffler.dc:
        condition: service_healthy
    networks:
      - niffler-network

  spend.niffler.dc:
    container_name: spend.niffler.dc
    image: ${PREFIX}/niffler-spend-${PROFILE}:${SPEND_VER}
    pull_policy: always
    environment:
      - VAULT_TOKEN=${VAULT_TOKEN}
    ports:
      - 8093:8093
    restart: always
    networks:
      - niffler-network

  userdata.niffler.dc:
    container_name: userdata.niffler.dc
    image: ${PREFIX}/niffler-userdata-${PROFILE}:${USERDATA_VER}
    pull_policy: always
    environment:
      - VAULT_TOKEN=${VAULT_TOKEN}
    ports:
      - 8089:8089
    restart: always
    depends_on:
      auth.niffler.dc:
        condition: service_healthy
    networks:
      - niffler-network

  frontend.niffler.dc:
    container_name: frontend.niffler.dc
    image: ${PREFIX}/${FRONT_IMAGE}-${PROFILE}:${FRONT_VER}
    pull_policy: always
    ports:
      - 8000:80
    restart: always
    depends_on:
      gateway.niffler.dc:
        condition: service_healthy
    networks:
      - niffler-network

networks:
  niffler-network:
    driver: bridge
